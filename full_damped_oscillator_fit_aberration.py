# -*- coding: utf-8 -*-
"""
Created on Sun Jan 31 09:35:21 2021

@author: Smart
"""

# -*- coding: utf-8 -*-
"""
Created on Sat Jan 30 17:50:35 2021

@author: Smart
"""

# -*- coding: utf-8 -*-
import numpy as np
from matplotlib import pyplot as plt

#plt.plot(time_vec, yarr[:, 1], label="y'")
x=[
1.799622222E0,	2.195631421E-1,
1.832955556E0,	2.347803896E-1,
1.866288889E0,	2.369542821E-1,
1.899622222E0,	2.173892496E-1,
1.932955556E0,	1.999981097E-1,
1.966288889E0,	1.717375072E-1,
1.999622222E0,	1.521724747E-1,
2.032955556E0,	1.195640873E-1,
2.066288889E0,	8.912959235E-2,
2.099622222E0,	5.869509740E-2,
2.132955556E0,	2.173892496E-2,
2.166288889E0,	-1.521724747E-2,
2.199622222E0,	-4.782563492E-2,
2.232955556E0,	-7.826012987E-2,
2.266288889E0,	-9.999905483E-2,
2.299622222E0,	-1.152163023E-1,
2.332955556E0,	-1.217379798E-1,
2.366288889E0,	-1.173901948E-1,
2.399622222E0,	-1.130424098E-1,
2.432955556E0,	-1.043468398E-1,
2.466288889E0,	-9.347737734E-2,
2.499622222E0,	-6.739066739E-2,
2.532955556E0,	-4.999952742E-2,
2.566133333E0,	-2.391281746E-2,
2.599500000E0,	-2.173892496E-3,
2.632866667E0,	3.260838745E-2,
2.666233333E0,	6.739066739E-2,
2.699500000E0,	9.130348485E-2,
2.732766667E0,	1.152163023E-1,
2.766033333E0,	1.347813348E-1,
2.799455556E0,	1.391291198E-1,
2.832877778E0,	1.369552273E-1,
2.866122222E0,	1.217379798E-1,
2.899366667E0,	1.108685173E-1,
2.932788889E0,	1.021729473E-1,
2.966100000E0,	8.478180736E-2,
2.999411111E0,	5.869509740E-2,
3.032722222E0,	4.565174242E-2,
3.066033333E0,	2.173892496E-2,
3.099344444E0,	4.347784993E-3,
3.132655556E0,	-1.739113997E-2,
3.165966667E0,	-3.695617244E-2,
3.199400000E0,	-5.869509740E-2,
3.232700000E0,	-7.826012987E-2,
3.266000000E0,	-8.478180736E-2,
3.299300000E0,	-9.347737734E-2,
3.332600000E0,	-7.826012987E-2,
3.366033333E0,	-6.956455988E-2,
3.399366667E0,	-5.217341991E-2,
3.432700000E0,	-4.130395743E-2,
3.466033333E0,	-2.826060245E-2,
3.499366667E0,	-1.739113997E-2,
3.532911111E0,	-1.739113997E-2,
3.566000000E0,	1.304335498E-2,
3.599333333E0,	3.478227994E-2,
3.632666667E0,	5.869509740E-2,
3.666000000E0,	7.826012987E-2,
3.732611111E0,	8.912959235E-2,
3.765944444E0,	8.695569986E-2,
3.799277778E0,	8.043402237E-2,
3.832611111E0,	7.608623737E-2,
3.865944444E0,	6.739066739E-2,
3.899277778E0,	5.434731241E-2,
3.932611111E0,	4.347784993E-2,
3.965844444E0,	3.260838745E-2,
3.999244444E0,	1.739113997E-2,
4.032644444E0,	-2.173892496E-3,
4.066044444E0,	-1.086946248E-2,
4.099244444E0,	-3.043449495E-2,
4.132577778E0,	-4.565174242E-2,
4.165911111E0,	-3.043449495E-2,
4.199244444E0,	-4.130395743E-2,
4.232577778E0,	-4.999952742E-2,
4.265911111E0,	-4.999952742E-2,
4.299244444E0,	-3.913006493E-2,
4.332577778E0,	-2.391281746E-2,
4.365911111E0,	-1.521724747E-2,
4.399144444E0,	2.173892496E-3,
4.432511111E0,	1.086946248E-2,
4.465877778E0,	2.391281746E-2,
4.499144444E0,	3.260838745E-2,
4.532411111E0,	3.260838745E-2,
4.565811111E0,	3.913006493E-2,
4.599111111E0,	4.347784993E-2,
4.632411111E0,	5.652120491E-2,
4.665711111E0,	6.521677489E-2,
4.699011111E0,	6.956455988E-2,
4.732311111E0,	6.521677489E-2,
4.765744444E0,	5.217341991E-2,
4.799077778E0,	4.565174242E-2,
4.832411111E0,	3.478227994E-2,
4.865744444E0,	3.478227994E-2,
4.899077778E0,	2.391281746E-2,
4.932411111E0,	1.739113997E-2,
4.965744444E0,	8.695569986E-3,
4.999077778E0,	4.347784993E-3,
5.032411111E0,	-1.086946248E-2,
5.065744444E0,	-1.739113997E-2,
5.099077778E0,	-2.608670996E-2,
5.132411111E0,	-1.956503247E-2,
5.165744444E0,	-2.173892496E-2,
5.199077778E0,	-2.608670996E-2,
5.232411111E0,	-4.347784993E-3,
5.265622222E0,	8.695569986E-3,
5.298988889E0,	1.956503247E-2,
5.332355556E0,	2.608670996E-2,
5.365933333E0,	2.173892496E-2,
5.398988889E0,	2.826060245E-2,
5.432322222E0,	3.043449495E-2,
5.465655556E0,	3.695617244E-2,
5.498988889E0,	3.695617244E-2
]

d = 0.47  # N s/m
T=1.9
omega = 3.5
t = np.linspace(0, 4, 1000)
Actual_t=[x[i] for i in range(0,len(x)) if i%2 == 0]
Actual=[x[i] for i in range(0,len(x)) if i%2 == 1]
Actual_t= np.array(Actual_t) -Actual_t[0]
A= Actual[0]

model = A*np.exp(-d*t)*np.cos(1.9*np.pi*t)


plt.plot(t,model)
plt.plot(Actual_t,Actual)
plt.title("Actual vs estimated time series")
plt.legend(['Predicted','Actual'])
plt.show()